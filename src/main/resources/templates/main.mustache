<!DOCTYPE html>
<html lang="en">
<head>
    <link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@400;500;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600&display=swap" rel="stylesheet">

    <meta charset="UTF-8">
    <title>Title</title>
    <style>
     html {
         font-family: 'Inter' ,sans-serif;
         margin: 0;
         height: 100%;
     }

     body {
         font-family: 'Inter' ,sans-serif;
         margin: 0;
     }

     .header {
         position: fixed;
         top: 0;
         left: 0;
         width: 100vw;
         height: 100px;
         z-index: 1000;
         display: flex;
         flex-direction: column;
     }

     .top-header {
         width: 100%;
         height: 100px;
         background-color: #000000;
         color: white;
         padding: 20px;
     }

     .header-row {
         display: flex;
         justify-content: space-between;
         align-items: center;
         height: 60px;
         font-size: 16px;
         font-weight: 600;
         background-color: #ffffff;
         padding: 20px;
         border-bottom: 1px solid #000000;
     }

	 .main-container {
		 margin-top: 100px;
		 padding: 0;
	 }

	 .main-grid {
		 display: grid;
		 grid-template-columns: 2fr 50px 1fr;
		 max-width: 1700px;
		 margin: 0 auto;
	 }

	 .left-section, .right-section {
		 padding: 20px;
	 }

	 .section-title {
		 font-size: 36px;
		 margin-bottom: 30px;
		 color: #000;
	 }

	 .card {
		 position: relative;
		 display: grid;
		 grid-template-columns: 80px 1fr;
		 border: 1px solid #000;
		 overflow: hidden;
		 counter-increment: card-counter;
		 height: 100%;
	 }

	 .card-number-section {
		 display: flex;
		 align-items: center;
		 justify-content: center;
		 border-right: 1px solid #000;
	 }

	 .card-content {
		 display: grid;
		 grid-template-rows: 1fr auto;
		 height: 100%;

	 }.card-info {
		  padding: 15px;
		  background: white;
		  border-top: 1px solid #000;
		  min-height: 80px;
	  }

	 .card-number::before {
		 content: "0" counter(card-counter);
		 font-size: 48px;
		 font-weight: bold;
	 }

	 .cards-grid {
		 display: grid;
		 grid-template-columns: repeat(2, 1fr);
		 grid-template-rows: repeat(2, 1fr);
		 gap: 20px;
		 height: 700px;
		 counter-reset: card-counter;
	 }

	 .card-number {
		 position: absolute;
		 top: 15px;
		 left: 15px;
		 font-size: 48px;
		 font-weight: bold;
		 /*z-index: 10;*/
	 }

	 .card-image {
		 width: 100%;
		 height: 100%;
		 object-fit: cover;
		 display: block;
		 transition: transform 0.3s ease;
	 }

	 .image-wrapper {
		 position: relative;
		 overflow: hidden;
		 height: 100%;
		 width: 100%;
		 margin: 0;
		 padding: 0;
	 }

	 .card-tags {
		 background: transparent !important; /* 빨간 테스트 배경 제거 */
		 min-height: 30px !important;
		 padding: 8px !important;
		 display: flex;
		 flex-wrap: wrap;
		 gap: 4px;
		 border-radius: 0 0 12px 12px;
	 }


	 .tag-badge {
		 display: inline-block;
		 padding: 2px 6px;
		 background: #ffffff;
		 color: #000000;
		 font-size: 12px;
		 border-radius: 8px;
		 border: 1px solid #ddd;
	 }


	 .image-overlay {
		 position: absolute;
		 top: 0;
		 left: 0;
		 width: 100%;
		 height: 100%;
		 background-color: rgba(0, 0, 0, 0.3);
		 opacity: 0;
		 transition: opacity 0.3s ease;
	 }

	 .image-wrapper:hover .image-overlay {
		 opacity: 1;
	 }

	 .center-section {
		 border-left: 1px solid #000;
		 border-right: 1px solid #000;
		 display: flex;
		 align-items: center;
		 justify-content: center;
		 writing-mode: vertical-rl;
		 font-size: 12px;
		 font-weight: 500;
		 position: relative;
	 }

	 .center-section::before {
		 content: 'EXHIBITION CURATING SERVICE';
		 transform: rotate(180deg);
	 }


	 .preference-form {
		 padding: 20px;
	 }

	 .question-block {
		 margin-bottom: 30px;
	 }

	 .question {
		 font-size: 18px;
		 font-weight: 600;
		 margin-bottom: 15px;
	 }

	 .options-grid {
		 display: grid;
		 grid-template-columns: repeat(2, 1fr);
		 gap: 10px;
	 }

	 .option-item, .tag-item {
		 display: flex;
		 align-items: center;
		 padding: 10px;
		 /*border: 1px solid #ddd;*/
		 /*border-radius: 4px;*/
		 cursor: pointer;
	 }

	 .submit-btn {
		 width: 100%;
		 padding: 15px;
		 font-size: 18px;
		 font-weight: bold;
		 background: #000;
		 color: white;
		 border: none;
		 border-radius: 4px;
		 cursor: pointer;
	 }


		 .footer {
			 background-color: #000;
			 height: 60px;
			 border-top: 1px solid #000;
			 color: white;
		 }

		 @media (max-width: 768px) {
			 .cards-grid {
				 grid-template-columns: repeat(2, 1fr);
			 }
		 }


    </style>
</head>

<body>

<!--헤더-->
<div class="header">
    <div class="top-header"></div>
    <div class="header-row"> HOME</div>
</div>

<!--본문-->
<div class="main-container">
	<div class="main-grid">

		<!-- 왼쪽: 카드 영역 -->
		<div class="left-section">
			<h2 class="section-title">
				Selected Displays for
				{{#userName}}{{userName}}{{/userName}}
				{{^userName}}TestUser{{/userName}}
			</h2>


        <!--추천 전시 카드-->
			<div class="cards-grid" id="recommendationContainer">
				{{#cards}}
					<div class="card">
					<!--인덱스-->
						<div class="card-number-section">
							<div class="card-number"></div>
						</div>

						<!--오른쪽 구역-->
						<div class="card-content">
						<div class="image-wrapper">
							<a href="/detail?title={{title}}">
							<img src="{{imageObject}}" onerror="this.onerror=null; this.src='/img/temp.jpg';" class="card-image" loading="lazy">
							<div class="image-overlay"></div>
							</a>
						</div>

							<div class="card-info">
							<h3 class="card-title">{{title}}</h3>
							<p class="card-period">{{period}}</p>
						</div>
					</div>
					</div>
				{{/cards}}
			</div>
		</div>

<!--중간 구역-->
		<div class="center-section" ></div>

<!--오른쪽 섹션 -> 사용자 취향 분석-->
    <div class="right-section">
		<h2 class="section-title">What are your tastes?</h2>

        <div class="question-container">
        <div class="preference-form">
			<!--이름 안풋 @수정필요@-->
			<div class="question-block">
				<div class="question">What's your name or nickname?</div>
				<input type="text" id="userName" name="userName"
					   placeholder="whatever name you want to be called"
					   class="name-input">
			</div>
			<!--첫번째 질문-->
			<div class="question-block">
				<div class="question">Are there any museums you're interested in?</div>
				<div class="options-grid">
					<label class="option-item">
						<input type="radio" name="location" value="서울">
						<span>서울</span>
					</label>
					<label class="option-item">
						<input type="radio" name="location" value="과천">
						<span>과천</span>
					</label>
					<label class="option-item">
						<input type="radio" name="location" value="덕수궁">
						<span>덕수궁</span>
					</label>
					<label class="option-item">
						<input type="radio" name="location" value="청주">
						<span>청주</span>
					</label>
					<label class="option-item">
						<input type="radio" name="location" value="상관 없음">
						<span>상관 없음</span>
					</label>
				</div>
			</div>
		</div>

        <!--두번째 질문(태그 / 선택 사항)-->
			<div class="question-block">
				<div class="question">What kind of art interests you?</div>
				<div class="tags-grid">
					<label class="tag-item">
						<input type="checkbox" name="tags" value="설치/미디어">
						<span>설치/미디어</span>
					</label>
					<label class="tag-item">
						<input type="checkbox" name="tags" value="사진">
						<span>사진</span>
					</label>
					<label class="tag-item">
						<input type="checkbox" name="tags" value="회화/수채">
						<span>회화/수채</span>
					</label>
					<label class="tag-item">
						<input type="checkbox" name="tags" value="근현대">
						<span>근현대</span>
					</label>
					<label class="tag-item">
						<input type="checkbox" name="tags" value="사운드">
						<span>사운드</span>
					</label>
					<label class="tag-item">
						<input type="checkbox" name="tags" value="자연">
						<span>자연</span>
					</label>
					<label class="tag-item">
						<input type="checkbox" name="tags" value="신인작가">
						<span>신인작가</span>
					</label>
					<label class="tag-item">
						<input type="checkbox" name="tags" value="상설전">
						<span>상설전</span>
					</label>
					<label class="tag-item">
						<input type="checkbox" name="tags" value="기획전">
						<span>기획전</span>
					</label>
				</div>
			</div>
			<button class="submit-btn" onclick="directSave()">IM READY!!!</button>
		</div>
		</div>
	</div>
	</div>
</div>



<footer class="footer"></footer>
</body>
<script>
    // 암 레디 버튼 누르면 업데이트 하기
    document.addEventListener('DOMContentLoaded', function() {
		console.log('$페이지 로드 완료');

        generateTagsOnce(); //태그 실행하기

        const readyButton = document.querySelector('.complete_input');
		console.log('$버튼 찾기 결과:', readyButton);

        if (readyButton) {
            readyButton.addEventListener('click', function() {
				console.log('$IM READY 버튼 클릭됨!');
                updateRecommendations();
            });
        }
    });

    async function generateTagsOnce() {
        try {
            const response = await fetch('/api/admin/generate-tags',{
                method: 'POST'
			});
            if (response.ok) {
                const date = await response.json();
                console.log("태그 생성 완료!:",date);
			}
		} catch (error) {
            console.log('태그 생성 중 오류 발생',error)
		}
	}

	function directSave() {
		console.log('직접 클릭 감지됨!');

        const preferences = collectPreferences();
        if (!preferences) {
            return;
		}

		fetch('/api/preference', {
			method: 'POST',
			headers: { 'Content-Type': 'application/json' },
			body: JSON.stringify({
				userName: preferences.userName,
				preferredLocation: preferences.preferredLocation,
				preferredTag: preferences.preferredTags
			})
		})
				.then(r => r.json())
				.then(data => {
					console.log('저장 성공:', data);
					alert('취향 저장 완료!');
					location.reload();
				})
				.catch(error => {
					console.error('저장 실패:', error);
					alert('저장 실패');
				});
	}


    function collectPreferences() {
		const userName = document.getElementById('userName').value || '';
		const preferredLocation = document.querySelector('input[name="location"]:checked')?.value || '';

        const selectedTags = Array.from(document.querySelectorAll('input[name="tags"]:checked'))
				.map(input => input.value);
        const preferredTags = selectedTags.join(',');


		console.log('$수집완료:', {
			userName: userName,
			location: preferredLocation,
			tags: preferredTags
		});

		if (!userName.trim()) {
			alert('이름을 입력하세요');
			return null;
		}

        if (!preferredLocation) {
			alert('모든 선택 사항을 체크해주세요');
			return null;
		}

        const result = {
            userName: userName,
			preferredLocation: preferredLocation,
			preferredTags: preferredTags
        };
        return result;
    }

</script>

</html>